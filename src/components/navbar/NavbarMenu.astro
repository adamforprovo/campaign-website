---
import { Image } from "astro:assets";
import menuCloseIcon from '../../assets/ui/nav-menu-close.svg';

const links = [
  { href: "/", text: "Home" },
  // { href: "/about", text: "About Adam" },
  { href: "/issues", text: "Issues" },
  { href: "/get-involved", text: "Get Involved" },
  { href: "/contact", text: "Contact" },
];
---

<div id="navbar-menu" class="navbar-menu navbar-menu-closed">
  <div id="navbar-menu-curtain" class="navbar-menu-curtain"/>

  <div class="navbar-menu-contents">
    <button id="navbar-menu-close-button" class="navbar-menu-close-button">
      <Image src={menuCloseIcon} alt="" class="navbar-menu-button-img">
    </button>

    <nav class="navbar-menu-list" id="navbar-menu-list">
      {links.map(link => (
        <a href={link.href} class="navbar-menu-list-item">{link.text}</a>
      ))}
    </nav>
  </div>
</div>

<style>
  @reference "../../styles/global.css";

  /* Menu */

  .navbar-menu {
    --main-animation-duration: 500ms;

    position: fixed;
    width: 100%; height: 100%;
    top: 0; left: 0;

    @apply bg-white/50;
  }

  .navbar-menu-closed {
    @apply invisible bg-white/0;
  }

  .navbar-menu-animating {
    @apply transition-[visibility, background-color];
    @apply duration-(--main-animation-duration) ease-in-out;
  }

  /* Curtain */

  .navbar-menu-curtain {
    @apply absolute size-full inset-0;
    @apply bg-white;
  }

  .navbar-menu-curtain-closed {
    @apply h-0;
  }

  .navbar-menu-curtain-animating {
    @apply transition-[height];
    @apply duration-(--main-animation-duration) ease-in-out;
  }

  /* Contents */

  .navbar-menu-contents {
    @apply absolute inset-0 overflow-y-auto;
  }

  /* Close Button */

  .navbar-menu-close-button {
    @apply absolute top-0 right-0 size-16;
    @apply flex items-center justify-center;
    @apply cursor-pointer;
  }

  .navbar-menu-button-img {
    @apply size-7 opacity-60;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
    pointer-events: none;
  }

  .navbar-menu-close-button-closed {
    @apply opacity-0;
  }

  .navbar-menu-close-button-animating {
    @apply transition-[opacity];
    @apply duration-500 ease-linear;
  }

  /* List */

  .navbar-menu-list {
    @apply w-full py-16 flex flex-col items-start;
  }

  .navbar-menu-list-item {
    @apply text-[1.75rem] font-bold text-content-primary w-full px-12 py-2;
  }

  .navbar-menu-list-closed { 
    @apply opacity-0 -translate-y-4;
  }

  .navbar-menu-list-animating-open {
    @apply transition-[opacity, translate];
    @apply duration-300 delay-200 ease-in-out;
  }

  .navbar-menu-list-animating-closed {
    @apply transition-[opacity, translate];
    @apply duration-300 ease-in-out;
  }

</style>

<script>

  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("navbar-menu");
    const curtain = document.getElementById("navbar-menu-curtain");
    const closeButton = document.getElementById("navbar-menu-close-button");
    const list = document.getElementById("navbar-menu-list");

    function disableBackgroundScroll() {
      document.documentElement.style.overflow = "hidden";
      document.body.style.overflow = "hidden";
    }

    function enableBackgroundScroll() {
      document.documentElement.style.overflow = "";
      document.body.style.overflow = "";
    }

    function addAnimationClass(element: HTMLElement | null, className: string) {
      element?.classList.add(className);
      
      function removeClass(event: TransitionEvent) {
        if (event.target !== element) return;
        element?.classList.remove(className);
        element?.removeEventListener("transitionend", removeClass);
      }
      element?.addEventListener("transitionend", removeClass);
    }

    function openMenu() {
      disableBackgroundScroll();

      menu?.classList.remove("navbar-menu-closed");
      curtain?.classList.remove("navbar-menu-curtain-closed");
      closeButton?.classList.remove("navbar-menu-close-button-closed");
      list?.classList.remove("navbar-menu-list-closed");
    }

    function closeMenu() {
      enableBackgroundScroll();

      menu?.classList.add("navbar-menu-closed");
      curtain?.classList.add("navbar-menu-curtain-closed");
      closeButton?.classList.add("navbar-menu-close-button-closed");
      list?.classList.add("navbar-menu-list-closed");
    }

    function openMenuAnimated() {
      openMenu();

      addAnimationClass(menu, "navbar-menu-animating");
      addAnimationClass(curtain, "navbar-menu-curtain-animating");
      addAnimationClass(closeButton, "navbar-menu-close-button-animating");
      addAnimationClass(list, "navbar-menu-list-animating-open");
    }

    function closeMenuAnimated() {
      closeMenu();

      addAnimationClass(menu, "navbar-menu-animating");
      addAnimationClass(curtain, "navbar-menu-curtain-animating");
      addAnimationClass(closeButton, "navbar-menu-close-button-animating");
      addAnimationClass(list, "navbar-menu-list-animating-closed");
    }

    closeMenu();

    window.addEventListener("pageshow", () => {
      closeMenu();
    });
    document.addEventListener("NavbarMenuOpen", () => {
      openMenuAnimated();
    });
    closeButton?.addEventListener("click", () => {
      closeMenuAnimated();
    });
  });

</script>